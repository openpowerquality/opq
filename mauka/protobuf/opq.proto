syntax = "proto2";

package opq.proto;

message Cycle{
	required uint64 time = 1;
	repeated int32 data = 2;
	optional int32 last_gps = 3;
	optional int32 current_count = 4;
	optional int32 flags = 5;
}

message DataMessage{
	required int32 id = 1;
	repeated Cycle cycles = 3;
}

message TriggerMessage{
	required int32 id = 1;
	required uint64 time = 2;
	required float frequency = 3;
	required float rms = 4;
	repeated int32 histogram = 5;
	optional int32 last_gps = 6;
	optional int32 current_count = 7;
	optional int32 flags = 8;
}

message RequestDataMessage{
	enum RequestType {
	    PING = 1;
	    PONG = 2;
	    READ = 3;
	    RESP = 4;
	    ERROR = 5;
 	}
	required RequestType type = 1;
	required uint32 sequence_number = 2;
	optional uint32 boxId = 3;
	optional uint64 time = 4;
	optional uint64 back = 5;
	optional uint64 forward = 6;
	optional uint32 num_cycles = 7;
}

// A request from OPQMauka to OPQMakai for raw data possibly relating
// to an event of interest.
message RequestEventMessage {
  enum TriggerType {
    FREQUENCY_SAG = 1;
    FREQUENCY_SWELL = 2;
    VOLTAGE_SAG = 3;
    VOLTAGE_SWELL = 4;
    OTHER = 5;
  }

  // Start time for raw data request in ms since the epoch utc
  required uint64 start_timestamp_ms_utc = 1;

  // End time for raw data request in ms since the epoch utc
  required uint64 end_timestamp_ms_utc = 2;

  // OPQMauka's reason for requesting data from OPQMakai
  required TriggerType trigger_type = 3;

  // Percent value of voltage or frequency depending on event type
  required double percent_magnitude = 4;

  // List of OPQBoxes that may have seen the same event trigger
  repeated int32 box_ids = 5;

  // Which OPQMauka plugin is making the request
  required string requestee = 6;

  // Human readable string of request generated my OPQMauka
  required string description = 7;

  // Whether or not to actually request data.
  // We send a request event message every time we see something interesting, 
  // but in order to limit multiple requests within a small window, we may not
  // request data for every event, but still want to log that something
  // interesting happenen
  required bool request_data = 8;
}







